# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  plugins:
    - custom_lint

linter:
  rules:
    unnecessary_brace_in_string_interps: false # customize style
    prefer_relative_imports: true
    unnecessary_statements: true
    always_declare_return_types: true
    always_put_control_body_on_new_line: true
    always_put_required_named_parameters_first: true
    always_specify_types: true #Incompatible with: avoid_types_on_closure_parameters, omit_local_variable_types.
    avoid_multiple_declarations_per_line: true
    avoid_unused_constructor_parameters: true
    avoid_void_async: true
    missing_whitespace_between_adjacent_strings: true
    prefer_interpolation_to_compose_strings: true
    prefer_single_quotes: true # compatible with: prefer_double_quotes.
    sort_child_properties_last: true
    sort_unnamed_constructors_first: true
    type_annotate_public_apis: true # Forces type annotations on
    unnecessary_await_in_return: trueprefer_final_parameters.
    unnecessary_parenthesis: true
    unnecessary_raw_strings: true
    use_raw_strings: true
    depend_on_referenced_packages: true